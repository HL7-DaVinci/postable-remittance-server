package org.hl7.davinci.pr.domain;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import java.util.Date;
import java.util.List;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

/**
 * Claim query, denormalized table with data enabling quick claim search.
 * */
@Entity
@Table(name = "claim_query")
@Getter
@Setter
@ToString
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class ClaimQuery extends AuditableEntity {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", nullable = false)
    private Integer id;

    /**
     * dcn-claim control number - payer generated
     */
    @Column(name="dcn_icn")
    String dcnIcn;

    @Column(name="received_dt")
    Date receivedDate;

    /**
     * provider TIN
     */
    @Column(name="provider_tin")
    String providerTin;

    /**
     * claim ID generated by provider
     */
    @Column(name="provider_claimID")
    String providerClaimID;

    /**
     * provider NPI
     * */
    @Column(name="provider_npi")
    String providerNPI;

    /**
     * claim ID generated by payer
     */
    @Column(name = "payer_claimID")
    String payerClaimId;

    /**
     * patient NPI assigned by payer
     * */
    @Column(name="subscriber_patient_id")
    String subscriberPatientId;

    @Column(name="dos_dt")
    Date dateOfService;

    @Column(name="claim_charge_amt")
    Float claimChargeAmount;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "patient_id")
    @ToString.Exclude
    Patient patient;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "provider_id")
    @ToString.Exclude
    Provider provider;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "payer_id")
    @ToString.Exclude
    Payer payer;

    @OneToMany(mappedBy = "claimQuery", fetch = FetchType.LAZY)
    @ToString.Exclude
    List<Remittance> remittances;

    @OneToMany(mappedBy = "claimQuery", fetch = FetchType.LAZY)
    @ToString.Exclude
    List<Payment> payment;
}
